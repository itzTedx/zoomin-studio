/*-- Background dot --*/

.bg-dot {
  --dot-size: 1px;
}
@media (min-width: 640px) {
  .bg-dot {
    --dot-size: 1.25px;
  }
}

.bg-dot:after {
  content: "";
  animation: dotScroll 16s linear infinite;
  background-image: radial-gradient(
    circle,
    hsla(var(--dot), 0.15) var(--dot-size),
    transparent 0
  );
  background-size: calc(14.2857142857% - 1px) 100px;
  background-position: 5px 0;
  padding-left: 1rem;
  padding-right: 1rem;
}

@keyframes dotScroll {
  0% {
    background-position-y: 140px;
  }

  to {
    background-position-y: 0;
  }
}

.bg-dot:after {
  position: absolute;
  inset: 0;
  z-index: -10;
}

@media (min-width: 768px) {
  .bg-dot:after {
    background-size: calc(8.3333333333% - 1px) 140px;
  }
}

@media (min-width: 768px) {
  .bg-dot:after {
    background-size: calc(8.3333333333% - 1px) 140px;
  }
}

@media (min-width: 640px) {
  .bg-dot:after {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media (min-width: 768px) {
  .bg-dot:after {
    padding-left: 3rem;
    padding-right: 3rem;
  }
}

.bg-dot:after {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 360px) {
  .bg-dot:after {
    max-width: 360px;
  }
}

@media (min-width: 400px) {
  .bg-dot:after {
    max-width: 400px;
  }
}

@media (min-width: 640px) {
  .bg-dot:after {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .bg-dot:after {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .bg-dot:after {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .bg-dot:after {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .bg-dot:after {
    max-width: 1536px;
  }
}

/*-- Glow Button --*/

.btn-outline {
  --black-700: hsla(var(--background) / 1);
  --border_radius: 9999px;
  --transtion: 0.3s ease-in-out;
  --offset: 2px;

  cursor: pointer;
  position: relative;

  display: flex;
  align-items: center;
  gap: 0.5rem;

  transform-origin: center;

  padding: 0.9rem 1.25rem;
  background-color: transparent;

  border: none;
  border-radius: var(--border_radius);
  transform: scale(calc(1 + (var(--active, 0) * 0.1)));

  transition: transform var(--transtion);

  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 100%;
    height: 100%;
    background-color: var(--black-700);

    border-radius: var(--border_radius);
    box-shadow:
      inset 0 0.5px hsla(85, 100%, 27%, 1),
      inset 0 -1px 2px 0 hsla(0, 0%, 0%, 0.5),
      0px 4px 10px -4px hsla(0 0% 0% / calc(1 - var(--active, 0.75))),
      0 0 0 calc(var(--active, 0) * 0.375rem) hsl(86 97% 50% / 0.75);

    transition: all var(--transtion);
    z-index: 0;
  }

  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: 100%;
    height: 100%;
    background-color: hsla(86 100% 40% / 0.75);
    background-image: radial-gradient(
        at 51% 89%,
        hsla(86, 60%, 54%, 1) 0px,
        transparent 50%
      ),
      radial-gradient(at 100% 100%, hsla(86, 36%, 60%, 1) 0px, transparent 50%),
      radial-gradient(at 22% 91%, hsla(86, 36%, 60%, 1) 0px, transparent 50%);
    background-position: top;

    opacity: var(--active, 0);
    border-radius: var(--border_radius);
    transition: opacity var(--transtion);
    z-index: 2;
  }

  &:is(:hover, :focus-visible) {
    --active: 1;
  }

  &:active {
    transform: scale(1);
  }

  .dots_border {
    --size_border: calc(100% + 2px);

    overflow: hidden;

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    width: var(--size_border);
    height: var(--size_border);
    background-color: transparent;

    border-radius: var(--border_radius);
    z-index: -10;

    &::before {
      content: "";
      position: absolute;
      top: 30%;
      left: 50%;
      transform: translate(-50%, -50%);
      transform-origin: left;
      transform: rotate(0deg);

      width: 100%;
      height: 2rem;
      background-color: hsl(var(--primary));

      mask: linear-gradient(transparent 0%, white 120%);
      animation: rotate 2s linear infinite;
    }
  }

  .sparkle {
    position: relative;
    z-index: 10;

    width: 1.75rem;

    .path {
      fill: currentColor;
      stroke: currentColor;

      transform-origin: center;

      color: hsl(var(--foreground));

      &:nth-child(1) {
        --scale_path_1: 1.2;
      }
      &:nth-child(2) {
        --scale_path_2: 1.2;
      }
      &:nth-child(3) {
        --scale_path_3: 1.2;
      }
    }
  }

  &:is(:hover, :focus) .sparkle .path {
    animation: path 1.5s linear 0.5s infinite;
  }

  span {
    position: relative;
    z-index: 10;

    background-image: linear-gradient(
      90deg,
      hsla(var(--foreground) / 1) 0%,
      hsla(var(--foreground) / var(--active, 0)) 200%
    );
    background-clip: text;
    color: transparent;
  }
}

@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}

@keyframes path {
  0%,
  34%,
  71%,
  100% {
    transform: scale(1);
  }
  17% {
    transform: scale(var(--scale_path_1, 1));
  }
  49% {
    transform: scale(var(--scale_path_2, 1));
  }
  83% {
    transform: scale(var(--scale_path_3, 1));
  }
}
